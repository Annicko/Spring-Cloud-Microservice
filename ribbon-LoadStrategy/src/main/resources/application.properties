# \u540D\u5B57
spring.application.name=ribbon-loadStrategy

#\u7AEF\u53E3
server.port=8085


#\u5728\u6CE8\u518C\u4E2D\u5FC3\u5F00\u542F\u7684\u8BA4\u8BC1\u4E4B\u540E\uFF0C\u5BA2\u6237\u7AEF\u6CE8\u518C\u914D\u7F6E\u4E5F\u8981\u52A0\u4E0A\u8BA4\u8BC1\u7684\u7528\u6237\u540D\u548C\u5BC6\u7801
eureka.client.serviceUrl.defaultZone=http://kevin:Kevin@localhost:8762/eureka/,http://kevin:Kevin@localhost:8761/eureka/


#\u91C7\u7528 IP\u6CE8\u518C
eureka.instance.preferIpAddress=true

# \u5B9A\u4E49 \u5B9E\u4F8BID \u683C\u5F0F
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}


# Ribbon \u9965\u997F\u52A0\u8F7D
# \u5F00\u542F Ribbon \u7684 \u9965\u997F\u52A0\u8F7D\u6A21\u5F0F
ribbon.eager-load.enabled=true
# \u6307\u5B9A\u9700\u8981\u9965\u997F\u52A0\u8F7D\u7684\u670D\u52A1\u540D \uFF0C\u591A\u4E2A\u53EF\u4EE5\u4F7F\u7528 \u9017\u53F7\u9694\u5F00
ribbon.eager-load.clients=ribbon-loadStrategy

#########################
#
# \u4F7F\u7528 \u81EA\u5B9A\u4E49\u7684\u8D1F\u8F7D\u5747\u8861\u7B56\u7565
#
#########################


# \u901A\u8FC7\u914D\u7F6E\u7684\u65B9\u6CD5\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684 \u8D1F\u8F7D\u5747\u8861 \u7B56\u7565\u3002
#ribbon-loadStrategy.ribbon.NFLoadBalancerRuleClassName=com.com.iotknowyou.SpringRestTemplate.Rule.MyRule

#\u7981\u7528 Eureka
# \u5F53\u6211\u4EEC\u7981\u7528\u4E86 Eureka \u4E4B\u540E\uFF0C\u5C31\u4E0D\u80FD\u4F7F\u7528\u670D\u52A1\u540D\u79F0\u53BB\u8C03\u7528\u63A5\u53E3\u4E86 \uFF0C \u5FC5\u987B\u6307\u5B9A\u670D\u52A1\u5730\u5740\u3002
#ribbon.eureka.enabled=false

#\u7981\u7528 Eureka \u540E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u624B\u52A8 \u914D\u7F6E\u670D\u52A1\u5668\u5730\u5740
#\u4EE5\u7981\u7528 Eureka\uFF0C \u7981\u7528\u4E4B\u540E\u5C31\u9700\u8981\u624B\u52A8\u914D\u7F6E\u8C03\u7528\u7684\u670D\u52A1\u5730\u5740\u4E86\uFF0C \u914D\u7F6E\u5982\u4E0B
#\u8FD9\u4E2A\u914D\u7F6E\u662F\u9488\u5BF9\u5177\u4F53\u670D\u52A1\u7684\uFF0C\u524D\u7F00\u5C31\u662F\u670D\u52A1\u540D\u79F0\uFF0C \u914D\u7F6E\u5B8C\u4E4B\u540E\u5C31\u53EF\u4EE5\u548C\u4E4B\u524D\u4E00\u6837\u4F7F\u7528 \u670D\u52A1\u540D\u79F0\u6765\u8C03\u7528\u63A5\u53E3\u4E86\u3002
#ribbon-loadStrategy.ribbon.listOfServers=localhost:8085,localhost:8086



#########################
#
# \u914D\u7F6E\u4E00\u4E9B \u7279\u5B9A\u7684\u8FDE\u63A5\u7684\u53C2\u6570
#
#########################

#\u914D\u7F6E\u8D1F\u8F7D\u5747\u8861\u7B56\u7565
ribbon-loadStrategy.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

# \u8BF7\u6C42\u8FDE\u63A5\u7684\u8D85\u65F6\u65F6\u95F4
ribbon.ConnectTimeout=2000

# \u8BF7\u6C42\u5904\u7406\u7684\u8D85\u65F6\u65F6\u95F4
ribbon.ReadTimeout=5000

# \u4E5F\u53EF\u4EE5\u4E3A\u4E0D\u540C\u7684 Ribbon \u5BA2\u6237\u7AEF\uFF0C\u8BBE\u7F6E\u4E0D\u540C\u7684\u8D85\u65F6\u65F6\u95F4
ribbon-loadStrategy.ribbon.ConnectTimeout=2000
ribbon-loadStrategy.ribbon.ReadTimeout=5000

# \u6700\u5927\u8FDE\u63A5\u6570
ribbon.MaxTotalConnections = 500

# \u6BCF\u4E2A host \u6700\u5927\u8FDE\u63A5\u6570
ribbon.MaxConnectionsPerHost = 500




#########################
#
# \u914D\u7F6E \u91CD\u8BD5\u673A\u5236 RetryRule , \u4EE5\u53CA\u6DFB\u52A0\u67D0\u4E9B \u53C2\u6570\u4FE1\u606F
#
#########################

#\u5BF9\u5F53\u524D\u5B9E\u4F8B\u7684\u91CD\u8BD5\u6B21\u6570
ribbon.maxAutoRetries=l
#\u5207\u6362\u5B9E\u4F8B\u7684\u91CD\u8BD5\u6B21\u6570
ribbon.maxAutoRetriesNextServer=3
#\u5BF9\u6240\u6709\u64CD\u4F5C\u8BF7\u6C42\u90FD\u8FDB\u884C\u91CD\u8BD5
ribbon.okToRetryOnAllOperations=true
#\u5BF9 Http \u54CD\u5E94\u7801 \u8FDB\u884C\u91CD\u8BD5
ribbon.retryableStatusCodes = 500,404,502